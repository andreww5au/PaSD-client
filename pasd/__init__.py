"""
Code to handle power and signal distribution for an SKA-Low station.

The contents are:

PaSD-client:

    docs: Autogenerated function/class documentation – start with index.html

    pasd: Code to monitor and control PaSD hardware:

        transport.py – low-level Modbus-ASCII code.

        smartbox.py – class to control a SMARTbox.

        fndh.py – class to control an FNDH.

        station.py – class to control an entire station (an FNDH and multiple SMARTboxes). Also acts as a Modbus 'slave' to act on commands from a Technician's SID.

        conversion.py – helper functions to convert sensor data between the values in the Modbus packets and real physical values.

        \*.json – default configuration data to send to the hardware on startup.

    simulate: Code to simulate real hardware, for testing:

        sim\_smartbox.py – Simulates a single SMARTbox.

        sim\_fndh.py – Simulates an FNDH.

        sim\_station – Simulates an entire SKALOW station (one FNDH and 24 SMARTboxes).

    sid: Code that acts as a Technician's Service Interface Device (SID):

        mccs.py – allows the user to communicate with the MCCS (pasd/station.py) using the SID API described above.

    communicate.py – wrapper script to start up and monitor a SMARTbox, FNDH, or a whole station.

    simulate.py – wrapper script to start simulating a SMARTbox, FNDH, or a whole station.


"""